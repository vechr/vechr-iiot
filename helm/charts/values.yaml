namespaceOverride: ""
########################################################### Config for Ingress ############################################################
ingress:
  name: vechr-ingress
  enabled: true
  ingressClassName: nginx

  # Will used this TLS if we not enabled cert manager ingress TLS, but you need enabled tls.enabled: true
  tls:
    enabled: true # enable for tls
    secretName: nginx-vechr-cert-dev # if you using development
    hosts: 
      - app.vechr.com
    ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIekNDQXdlZ0F3SUJBZ0lVWWZsYWh1RFkrTXhSVndVb3NIU2hORzNsM3M4d0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daNHhDekFKQmdOVkJBWVRBa2xFTVJNd0VRWURWUVFJREFwS1lYZGhJRUpoY21GME1ROHdEUVlEVlFRSApEQVpEYVcxaGFHa3hFVEFQQmdOVkJBb01DRlpsWTJoeUlFTkJNUjR3SEFZRFZRUUxEQlZEWlhKMGFXWnBZMkYwClpTQkJkWFJvYjNKcGRIa3hGakFVQmdOVkJBTU1EV0Z3Y0M1MlpXTm9jaTVqYjIweEhqQWNCZ2txaGtpRzl3MEIKQ1FFV0QyRmtiV2x1UUhabFkyaHlMbU52YlRBZUZ3MHlNakV5TVRFeE56SXdNelZhRncweU56RXlNVEF4TnpJdwpNelZhTUlHZU1Rc3dDUVlEVlFRR0V3SkpSREVUTUJFR0ExVUVDQXdLU21GM1lTQkNZWEpoZERFUE1BMEdBMVVFCkJ3d0dRMmx0WVdocE1SRXdEd1lEVlFRS0RBaFdaV05vY2lCRFFURWVNQndHQTFVRUN3d1ZRMlZ5ZEdsbWFXTmgKZEdVZ1FYVjBhRzl5YVhSNU1SWXdGQVlEVlFRRERBMWhjSEF1ZG1WamFISXVZMjl0TVI0d0hBWUpLb1pJaHZjTgpBUWtCRmc5aFpHMXBia0IyWldOb2NpNWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURIZjJlSkp4bG03b1hqaUNKZFdvT3dydlRGQkJtRHd5RUgyQlFlZExHck1GRThTZEFkT2EwcHk0UCsKYnZlTUxMWHF4ZDMvTFN3Y3FkcU1QZHNUSytYdWJacjJEeGlWa2FJVzlTMEw4aHlPekNaR0s4eTZFRVVRVDBPYwo5YkRsTHUyaStFZHNYUVZrWVlndjJnaVE3WjNTNTNxSHN4S3o0ZjFIRjl2N2ZsZDZYVXVFTm5Eak9relRvSTRFCmRSTUtId3FxM1lJOUJXdUY2VVQ1N1NqdFFMNGhBWWhER3F2VHRHUE1DWm1HZ2V6OS9ieFU0dVk0d053bm1tRysKdjFDNkJSRnFaandEOFlzbmRRd2ZkV0RKTVJ0dFRueDkyUGpSVkxBWThCd3Vuams4MXByR2JlUW5kNjJEMldPSwpFbGtlUG4zc2xCSlFKc1RzcVFnV3hDY0M0RE1wQWdNQkFBR2pVekJSTUIwR0ExVWREZ1FXQkJUUjJKN1Q1d21nCnhVRmdMSmZ3V1BndldzQ1BQREFmQmdOVkhTTUVHREFXZ0JUUjJKN1Q1d21neFVGZ0xKZndXUGd2V3NDUFBEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJzUENTcTFlODdUbERhRGJzaApvbDJJY2s2c05tOWwxL1NMcmxWdUxsVU1NcmlQL3YxZmorYTAvV3MyS2ZXaXYzWFJtbGg2aHptNFFSdmN2a3N0CmpNb1A2NitzWU1EZ2kyUUZWamQ4ZzZuZkpiMXkzL2o4dFVLZFc1N3g2QTVwNlpNY3FubWFKWElSWjJ2VUlNMmoKdk5Qa0s3OWFxMUJJSEZBeVVLMksvenlkUjBvY21GL2F5dE41K2xnM0FtWXhtWHE3RGZRU0Z5L3ZOSHZZU3dCaQpxV3U5c0VFQUk1aG5yc0Q2SDFsWnczVFBLd2dxK0JMM0RIS0pLbmM5clpkc3FMMHBSODFEaFo3U2E1R2p2TGRPCmtUeWdyTmpYSU5QZ3RUQzFpTURnUjFxU3hlMXBscTllVWZpZU4yZ0pDL2R1VDZSMU1sc244Sm1YaHVFQXJ6QzcKbndjUAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVMakNDQXhhZ0F3SUJBZ0lVYzJVWXV4cy8vR25oWTZPMUtRR0xKa0FYTFNVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daNHhDekFKQmdOVkJBWVRBa2xFTVJNd0VRWURWUVFJREFwS1lYZGhJRUpoY21GME1ROHdEUVlEVlFRSApEQVpEYVcxaGFHa3hFVEFQQmdOVkJBb01DRlpsWTJoeUlFTkJNUjR3SEFZRFZRUUxEQlZEWlhKMGFXWnBZMkYwClpTQkJkWFJvYjNKcGRIa3hGakFVQmdOVkJBTU1EV0Z3Y0M1MlpXTm9jaTVqYjIweEhqQWNCZ2txaGtpRzl3MEIKQ1FFV0QyRmtiV2x1UUhabFkyaHlMbU52YlRBZUZ3MHlNakV5TVRFeU1UQTJNRE5hRncweU16RXlNVEV5TVRBMgpNRE5hTUlHTU1Rc3dDUVlEVlFRR0V3SkpSREVUTUJFR0ExVUVDQXdLU21GM1lTQkNZWEpoZERFUE1BMEdBMVVFCkJ3d0dRMmx0WVdocE1RNHdEQVlEVlFRS0RBVldaV05vY2pFUE1BMEdBMVVFQ3d3R1JHVjJUM0J6TVJZd0ZBWUQKVlFRRERBMWhjSEF1ZG1WamFISXVZMjl0TVI0d0hBWUpLb1pJaHZjTkFRa0JGZzloWkcxcGJrQjJaV05vY2k1agpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFVLNVJBSXlYd2NXUTBBWXVHCnhWbENUd1dIYzE3WmwxWnR1b2RLbVNWdzFOTlA2ZitSYnEzQ0VJbkxpaVdYMHdocks3RlM2WEJIQ2piMEhJcTAKTVRCWERSdEhHRWVXUGdXSmlTUkhFeUQ1Nm13cDBKdnpSajFYN0RVcWV2RHMzU2piRFBSdjY4c1BxekRIUkx3NQo3emRUSEFFbG5zU3dwb2hDRjNZaTBLTENGRTVvUkU3NnNUeVZHSW5BZ1FXUXNMUlJEL1hpbFRDQ3ltL1hZMTEwClJyRUpXT3V5QnNPWW1kYVNpdVMyempKNlVsZXJhOWJFTUJ5WTAvT1JDWGV1UmdCR0ljcjAzSEcxV3VjZFNHbHoKaHg1dERqY3BQRmh2UkltbUFON2tiZVY2bGh6dXRGQWxOaFlwNmdvT3k0V1NuVngranlzVXg5UVpkZU9BS0ltbAoxNDZaQWdNQkFBR2pkREJ5TUI4R0ExVWRJd1FZTUJhQUZOSFludFBuQ2FERlFXQXNsL0JZK0M5YXdJODhNQWtHCkExVWRFd1FDTUFBd0N3WURWUjBQQkFRREFnVHdNQmdHQTFVZEVRUVJNQStDRFdGd2NDNTJaV05vY2k1amIyMHcKSFFZRFZSME9CQllFRk5vVzAvYVF4a24zbWpKZU5uaFk1bjdFSDZZU01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQgpBUUNuTmZvQXZMbWk2TUZpenE5czMrUmN2YmROekd6WnZCc3hXYjR1Z0J4WHpLMmZ2MDl4ZDRaQjJNejlkY1BlCkM4Ui9HbVdjS3owaUVzNWRqSDRGbmEzSHJqbWNYZnYvck1WUDdsUjFDOWRTL2tTTEptRW1laUhzVFZ0M2ptNTcKUXc0UkpMM013RXdTQ1Qxbnl3RVlKZlROTXB1bmtVdmhvVVc0QVhyNGpralR4ZTd5THhMU1cvZWtTOTRCYldmcQpSY3kwc0R5a3M2VGJ3MDA5K0owWXFBWk9VSUYyWWhub2U4MzlXV2hPem4xcHFXRXFKcFVIaWRYaFBXRnpTQS9MCjBqc3hlQ0wrWkRMSmJZa2g1QWQzdEhDNExwRkg5U2NWTlVQYmF1M0NlcUJNZVovVFd3UXhTbUpIMEs3TGx5RmUKRVVHeE5DNm16UE1SaVpWdXlrOTJ4cXl4Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
    key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2QUlCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktZd2dnU2lBZ0VBQW9JQkFRRFVLNVJBSXlYd2NXUTAKQVl1R3hWbENUd1dIYzE3WmwxWnR1b2RLbVNWdzFOTlA2ZitSYnEzQ0VJbkxpaVdYMHdocks3RlM2WEJIQ2piMApISXEwTVRCWERSdEhHRWVXUGdXSmlTUkhFeUQ1Nm13cDBKdnpSajFYN0RVcWV2RHMzU2piRFBSdjY4c1BxekRIClJMdzU3emRUSEFFbG5zU3dwb2hDRjNZaTBLTENGRTVvUkU3NnNUeVZHSW5BZ1FXUXNMUlJEL1hpbFRDQ3ltL1gKWTExMFJyRUpXT3V5QnNPWW1kYVNpdVMyempKNlVsZXJhOWJFTUJ5WTAvT1JDWGV1UmdCR0ljcjAzSEcxV3VjZApTR2x6aHg1dERqY3BQRmh2UkltbUFON2tiZVY2bGh6dXRGQWxOaFlwNmdvT3k0V1NuVngranlzVXg5UVpkZU9BCktJbWwxNDZaQWdNQkFBRUNnZ0VBRllMcUcrTWNaMytObythMHMyZzZvNm9Rb3RJd0Q1SmtHMG0yU2hwVEpSaVUKNktVdVNkdmRmdCt2b3R6NXNRWWUxRVBZclpINHRlRXJuMjR0NDNWWncvZXltRytXSVgzZUVKcmduRnFzaFI0dgpFNEhBc0FhQzlYRS8xalBqRGJiaUc2eDVjNGdGL1d1VFRWN1RFVEluYXpRYml5bUk0bXF1QmJwc2VqenFSWkE3ClltMXRiV294VXRsY0hCZWlCVkUrVlB0T3gvSUpGYWJNTEdkRFBjazk4MlNuMWJGbGpGbFBVQTNtMTdIWlhjbHIKZTlwcXB4eWZJR3djdVJzOXNyRDBCWmdtM1U3WXYvaGtXUlhZSzBDcDNSM3FyR3drMXZ2Ni9EckhkcWliWmtaZQozYkhPRHI5YnFLbmxpbkYvWmFScjEyelRSUmZkdXVMM1FKb3RKZ2FYVVFLQmdRRDVENXQ1bE5MTEZUM3BzbjlWClE3cXNwdWt6V2ttcjFmZ1hEYVF5QmxVZ2pkdDcrNlZ3bDFWeWU5SUhPSEFtanBpY0Q1aHVwMVkyN2lkakd3ckwKMU82MHRNM01weXdzK29mcTFDY1M4enE3N2QzdzY5MkpTVmNYbzdpdXc2TEpsd080MDJGMXVOaHUzRlJENmVLegp4TWVtQUU4cjlXNnNmdVFGWVgzWkcwbXpDUUtCZ1FEYUZOcVBDeHA1YWtwMlQraHdjcjhKTmlaVGNyMjl2STlRCjRKMSs5dTdrWGFDT0VEb0x3T2htajB1QklCVmZOM0hqVzhJME9GUnl4L3E1MXkwNy9mNTFFSTJqQVRmUGRhRGEKbXA0cjE4SFY5NCsyKzFzY0xjQXRSZFdab2dhbFhUQUQvUEF2UEFnYmFnUWd0L1VWREZhS0YybjZwWlBGYzBzUQpQSW13M2FFVEVRS0JnQnRraEEwVE9UdnMwaXBwMzJkWlU2YTVsTng1Q2JGRWoweTV5MTFWSlBlM29uUTRjVEc0CjgwVHNLV1Z4NTZQVit5THU5Q3ozYXB3UUJYVDQvRzcrdEdKYm9HYnAzQW4yWkF5SDJPUlVyQmtQU0dHL0QxYVMKSW1vUEw3akkrNWFBYllCZWYxR2JTdkttZVA0Zk16ZmlaTEwxUmIvbjlvd3lTSkh1N3hCNTE5bEJBb0dBWXlIOQpvKzU1TDE0STBUVkx4T24wT3h5NVdVK2NQc2FiSXptbmZsS0RqNTJiNFZndytxekxOK3ZGZDhIODFSYWdGNmpiClk5K0RTOVhwL0ZaN0FuMVlFU0RnTVl2Wk1kNFhxNmVEWlF5ajJUNjZ2b1FPQzRZa2lLL3BBL2hxS3Z0c1d6TzgKZnN3OEp6SVBCRXg3QlFGaHlVNFJaOVdpa2F2eUlFUlVsdWg0VXZFQ2dZQjI4LzRJVkxOTGFGOGM4RVRqdDJWZwppcWQ5T1doVnIvRUl3U2YvUVRNMEdzbWh4RGRLSk1NaE1kTW1aMmhkUFZNaFRUUHRxbFRRM3hDVUF3Y2tVd0lrCldFRjRvWnBkNXoraUFVRkxjTjRHWmk4ZWpFWnNWemF1VkdrVmlrbTVrc1BaVFM3b04xZDdqTUJsQU5aRnh5THQKbE5iNzRWeGROOU9aWEdxZ3hyb2Jtdz09Ci0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K
  
  rules:
    -
      host: app.vechr.com
      services:
        # backend audit
        -
          name: vechr-microservice-service
          path: /api/v2/audit
          port: 3004
        -
          name: vechr-microservice-service
          path: /api/v1/audit
          port: 3004
        -
          name: vechr-microservice-service
          path: /api/audit
          port: 3004
        # backend auth
        -
          name: vechr-microservice-service
          path: /api/v2/auth
          port: 3005
        -
          name: vechr-microservice-service
          path: /api/v1/auth
          port: 3005
        -
          name: vechr-microservice-service
          path: /api/auth
          port: 3005
        # backend notification
        -
          name: vechr-microservice-service
          path: /api/v2/notification
          port: 3002
        -
          name: vechr-microservice-service
          path: /api/v1/notification
          port: 3002
        -
          name: vechr-microservice-service
          path: /api/notification
          port: 3002
        # backend things
        -
          name: vechr-microservice-service
          path: /api/v2/things
          port: 3001
        -
          name: vechr-microservice-service
          path: /api/v1/things
          port: 3001
        -
          name: vechr-microservice-service
          path: /api/things
          port: 3001
        # frontend
        -
          name: vechr-frontend-web-app
          path: /
          port: 80
        
############################################################ Config for Common ############################################################
common:
  # You can use custom kubernetes postgres here, or you can use postgresql (using bitnami postgresql)
  postgres:
    # - 
    #   name: "vechr"
    #   externalPort: 5432
    #   enabled: true

    #   env:
    #     - name: POSTGRES_DB
    #       value: "postgres"
    #     - name: POSTGRES_USER
    #       value: Vechr
    #     - name: POSTGRES_PASSWORD
    #       value: "123"

  frontend:
    name: web-app
    image: zulfikar4568/web-app
    tag: latest
    enabled: true

    # imagePullPolicy: Always is recommended when using latest tags. Otherwise, please use IfNotPresent
    imagePullPolicy: Always

    port: 80
    externalPort: 80
    nodePort: 30035

    # Resource
    resources:
      requests:
        memory: "100Mi"
        cpu: "100m"
      limits:
        memory: "1024Mi"
        cpu: "1"

  influx:
    name: influxdb
    replicas: 2
    enabled: true
    deployment:
      image: influxdb
      tag: 2.1.0-alpine
    influx:
      mode: setup
      organization: Vechr
      bucket: Vechr
      token: vechr-token
    auth:
      username: admin
      password: isnaen1998

######################################################### Config for Microservices ########################################################
microservices:
  -
    enabled: true
    name: audit-service
    image: zulfikar4568/audit-service
    tag: latest

    # imagePullPolicy: Always is recommended when using latest tags. Otherwise, please use IfNotPresent
    imagePullPolicy: Always

    # these will be passed as environment variables
    env:
      - name: JWT_SECRET
        value: "secretvechr"
      - name: ECRYPTED_SECRET
        value: "usersecret"
      - name: JWT_EXPIRES_IN
        value: "3d"
      - name: DB_URL
        value: "postgresql://vechrUser:vechr123@vechr-production-postgresql.default.svc.cluster.local:5432/audit_db?schema=public&connect_timeout=300"

    externalPort: 3004
    nodePort: 30036

    # Resource
    resources:
      requests:
        memory: "300Mi"
        cpu: "300m"
      limits:
        memory: "1024Mi"
        cpu: "1"

    hpa:
      enabled: false
      minReplicas: 1
      maxReplicas: 2
      averageUtilization: 70
  -
    enabled: true
    name: auth-service
    image: zulfikar4568/auth-service
    tag: latest

    # imagePullPolicy: Always is recommended when using latest tags. Otherwise, please use IfNotPresent
    imagePullPolicy: Always

    # these will be passed as environment variables
    env:
      - name: JWT_SECRET
        value: "secretvechr"
      - name: ECRYPTED_SECRET
        value: "usersecret"
      - name: JWT_EXPIRES_IN
        value: "3d"
      - name: DB_URL
        value: "postgresql://vechrUser:vechr123@vechr-production-postgresql.default.svc.cluster.local:5432/auth_db?schema=public&connect_timeout=300"
      - name: JWT_REFRESH_EXPIRES_IN
        value: "30d"
      - name: INITIAL_SITE
        value: '{"code":"ST1","name":"Site Default","location":"Server Default"}'
      - name: INITIAL_SUPERUSER
        value: '{"fullName":"root","username": "root","emailAddress":"root@vechr.id","phoneNumber":"+62","password":"password123"}'

    externalPort: 3005
    nodePort: 30037

    # Resource
    resources:
      requests:
        memory: "300Mi"
        cpu: "300m"
      limits:
        memory: "1024Mi"
        cpu: "1"

    hpa:
      enabled: false
      minReplicas: 1
      maxReplicas: 2
      averageUtilization: 70
  -
    enabled: true
    name: db-logger-service
    image: zulfikar4568/db-logger-service
    tag: latest

    # imagePullPolicy: Always is recommended when using latest tags. Otherwise, please use IfNotPresent
    imagePullPolicy: Always

    # these will be passed as environment variables
    env:
      - name: JWT_SECRET
        value: "secretvechr"
      - name: ECRYPTED_SECRET
        value: "usersecret"
      - name: JWT_EXPIRES_IN
        value: "3d"
      - name: INFLUX_URL
        value: "http://influxdb-service.default.svc.cluster.local:8086/"
      - name: INFLUX_TOKEN
        value: "vechr-token"
      - name: INFLUX_ORG
        value: "Vechr"
      - name: INFLUX_BUCKET
        value: "Vechr"

    externalPort: 3003
    nodePort: 30038

    # Resource
    resources:
      requests:
        memory: "300Mi"
        cpu: "300m"
      limits:
        memory: "1024Mi"
        cpu: "1"

    hpa:
      enabled: true
      minReplicas: 1
      maxReplicas: 2
      averageUtilization: 70
  -
    enabled: true
    name: notification-service
    image: zulfikar4568/notification-service
    tag: latest

    # imagePullPolicy: Always is recommended when using latest tags. Otherwise, please use IfNotPresent
    imagePullPolicy: Always

    # these will be passed as environment variables
    env:
      - name: JWT_SECRET
        value: "secretvechr"
      - name: ECRYPTED_SECRET
        value: "usersecret"
      - name: JWT_EXPIRES_IN
        value: "3d"
      - name: EMAIL_ID
        value: isnaen71@gmail.com
      - name: EMAIL_PASS
        value: ofhbzrgtvmzbgrlh
      - name: EMAIL_HOST
        value: gmail-service.default.svc.cluster.local
      - name: EMAIL_PORT
        value: "587"
      - name: DB_URL
        value: "postgresql://vechrUser:vechr123@vechr-production-postgresql.default.svc.cluster.local:5432/notification_db?schema=public&connect_timeout=300"

    externalPort: 3002
    nodePort: 30039

    # Resource
    resources:
      requests:
        memory: "300Mi"
        cpu: "300m"
      limits:
        memory: "1024Mi"
        cpu: "1"

    hpa:
      enabled: false
      minReplicas: 1
      maxReplicas: 2
      averageUtilization: 70
  -
    enabled: true
    name: things-service
    image: zulfikar4568/things-service
    tag: latest

    # imagePullPolicy: Always is recommended when using latest tags. Otherwise, please use IfNotPresent
    imagePullPolicy: Always

    # these will be passed as environment variables
    env:
      - name: JWT_SECRET
        value: "secretvechr"
      - name: ECRYPTED_SECRET
        value: "usersecret"
      - name: JWT_EXPIRES_IN
        value: "3d"
      - name: DB_URL
        value: "postgresql://vechrUser:vechr123@vechr-production-postgresql.default.svc.cluster.local:5432/things_db?schema=public&connect_timeout=300"

    externalPort: 3001
    nodePort: 30040
      
    # Resource
    resources:
      requests:
        memory: "300Mi"
        cpu: "300m"
      limits:
        memory: "1024Mi"
        cpu: "1"

    hpa:
      enabled: false
      minReplicas: 1
      maxReplicas: 2
      averageUtilization: 70
  
############################################################# Config for NATS #############################################################
# Required for NATS TLS
natsSelfSigned:
  secretName: nats-vechr-cert
  ca: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVIekNDQXdlZ0F3SUJBZ0lVWWZsYWh1RFkrTXhSVndVb3NIU2hORzNsM3M4d0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daNHhDekFKQmdOVkJBWVRBa2xFTVJNd0VRWURWUVFJREFwS1lYZGhJRUpoY21GME1ROHdEUVlEVlFRSApEQVpEYVcxaGFHa3hFVEFQQmdOVkJBb01DRlpsWTJoeUlFTkJNUjR3SEFZRFZRUUxEQlZEWlhKMGFXWnBZMkYwClpTQkJkWFJvYjNKcGRIa3hGakFVQmdOVkJBTU1EV0Z3Y0M1MlpXTm9jaTVqYjIweEhqQWNCZ2txaGtpRzl3MEIKQ1FFV0QyRmtiV2x1UUhabFkyaHlMbU52YlRBZUZ3MHlNakV5TVRFeE56SXdNelZhRncweU56RXlNVEF4TnpJdwpNelZhTUlHZU1Rc3dDUVlEVlFRR0V3SkpSREVUTUJFR0ExVUVDQXdLU21GM1lTQkNZWEpoZERFUE1BMEdBMVVFCkJ3d0dRMmx0WVdocE1SRXdEd1lEVlFRS0RBaFdaV05vY2lCRFFURWVNQndHQTFVRUN3d1ZRMlZ5ZEdsbWFXTmgKZEdVZ1FYVjBhRzl5YVhSNU1SWXdGQVlEVlFRRERBMWhjSEF1ZG1WamFISXVZMjl0TVI0d0hBWUpLb1pJaHZjTgpBUWtCRmc5aFpHMXBia0IyWldOb2NpNWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURIZjJlSkp4bG03b1hqaUNKZFdvT3dydlRGQkJtRHd5RUgyQlFlZExHck1GRThTZEFkT2EwcHk0UCsKYnZlTUxMWHF4ZDMvTFN3Y3FkcU1QZHNUSytYdWJacjJEeGlWa2FJVzlTMEw4aHlPekNaR0s4eTZFRVVRVDBPYwo5YkRsTHUyaStFZHNYUVZrWVlndjJnaVE3WjNTNTNxSHN4S3o0ZjFIRjl2N2ZsZDZYVXVFTm5Eak9relRvSTRFCmRSTUtId3FxM1lJOUJXdUY2VVQ1N1NqdFFMNGhBWWhER3F2VHRHUE1DWm1HZ2V6OS9ieFU0dVk0d053bm1tRysKdjFDNkJSRnFaandEOFlzbmRRd2ZkV0RKTVJ0dFRueDkyUGpSVkxBWThCd3Vuams4MXByR2JlUW5kNjJEMldPSwpFbGtlUG4zc2xCSlFKc1RzcVFnV3hDY0M0RE1wQWdNQkFBR2pVekJSTUIwR0ExVWREZ1FXQkJUUjJKN1Q1d21nCnhVRmdMSmZ3V1BndldzQ1BQREFmQmdOVkhTTUVHREFXZ0JUUjJKN1Q1d21neFVGZ0xKZndXUGd2V3NDUFBEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJzUENTcTFlODdUbERhRGJzaApvbDJJY2s2c05tOWwxL1NMcmxWdUxsVU1NcmlQL3YxZmorYTAvV3MyS2ZXaXYzWFJtbGg2aHptNFFSdmN2a3N0CmpNb1A2NitzWU1EZ2kyUUZWamQ4ZzZuZkpiMXkzL2o4dFVLZFc1N3g2QTVwNlpNY3FubWFKWElSWjJ2VUlNMmoKdk5Qa0s3OWFxMUJJSEZBeVVLMksvenlkUjBvY21GL2F5dE41K2xnM0FtWXhtWHE3RGZRU0Z5L3ZOSHZZU3dCaQpxV3U5c0VFQUk1aG5yc0Q2SDFsWnczVFBLd2dxK0JMM0RIS0pLbmM5clpkc3FMMHBSODFEaFo3U2E1R2p2TGRPCmtUeWdyTmpYSU5QZ3RUQzFpTURnUjFxU3hlMXBscTllVWZpZU4yZ0pDL2R1VDZSMU1sc244Sm1YaHVFQXJ6QzcKbndjUAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  cert: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUZDakNDQS9LZ0F3SUJBZ0lVYzJVWXV4cy8vR25oWTZPMUtRR0xKa0FYTFNvd0RRWUpLb1pJaHZjTkFRRUwKQlFBd2daNHhDekFKQmdOVkJBWVRBa2xFTVJNd0VRWURWUVFJREFwS1lYZGhJRUpoY21GME1ROHdEUVlEVlFRSApEQVpEYVcxaGFHa3hFVEFQQmdOVkJBb01DRlpsWTJoeUlFTkJNUjR3SEFZRFZRUUxEQlZEWlhKMGFXWnBZMkYwClpTQkJkWFJvYjNKcGRIa3hGakFVQmdOVkJBTU1EV0Z3Y0M1MlpXTm9jaTVqYjIweEhqQWNCZ2txaGtpRzl3MEIKQ1FFV0QyRmtiV2x1UUhabFkyaHlMbU52YlRBZUZ3MHlNekEyTURrd09UUTNNalJhRncweU5EQTJNRGd3T1RRMwpNalJhTUlHTU1Rc3dDUVlEVlFRR0V3SkpSREVUTUJFR0ExVUVDQXdLU21GM1lTQkNZWEpoZERFUE1BMEdBMVVFCkJ3d0dRMmx0WVdocE1RNHdEQVlEVlFRS0RBVldaV05vY2pFUE1BMEdBMVVFQ3d3R1JHVjJUM0J6TVJZd0ZBWUQKVlFRRERBMWhjSEF1ZG1WamFISXVZMjl0TVI0d0hBWUpLb1pJaHZjTkFRa0JGZzloWkcxcGJrQjJaV05vY2k1agpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3BrRDgwaFpXK3hNbWZUSndCClRPcnJBMkxkdG43NGUxREtYbkFtSlE3eGNCVk8xUnBDaU1PNWNDSmo4NWFRNm5ZVjVJSkR3S3FVNHFaeHRwbjMKK0d6ZzNRWGFySVVQVGtxbm5BR09DeXZTUktDT0VEYjVyZUk5SjhjS0JOeEh6QTFEUWRncUVKUXAvKzRWeVJEbgo1STNTT0xwWnZxSFhZRnU1QWxsM0pNWm1kSU9RMGxDLzI5bHFVZHg0L0dMN0lxNU5uek9vUDI4QUZCN0htT2FaCjg2RHBaaWk4bGtxU28rUFdjY0I0NEtuQmY2UWVGaitZTHRvbExUaFhjVjQ0TE9xWGFuSG1RK1FOOUtJVndHQUkKcjN6cTNGZVhzc1JVZkw1VVNXS2JVS0JhVEg2QTE1VWxEY1FlNHV3YVluRnFESDEwdWN6TG9iL1R0Rk4zSHhrMwpYZkV6QWdNQkFBR2pnZ0ZPTUlJQlNqQWZCZ05WSFNNRUdEQVdnQlRSMko3VDV3bWd4VUZnTEpmd1dQZ3ZXc0NQClBEQUpCZ05WSFJNRUFqQUFNQXNHQTFVZER3UUVBd0lFOERDQjd3WURWUjBSQklIbk1JSGtnZzFoY0hBdWRtVmoKYUhJdVkyOXRnZzV1WVhSekxuWmxZMmh5TG1OdmJZSUpiRzlqWVd4b2IzTjBnZ3R1WVhSekxYTmxjblpsY29JaApibUYwY3kxc1lpNWtaV1poZFd4MExuTjJZeTVqYkhWemRHVnlMbXh2WTJGc2dpUnVZWFJ6TFd4aUxuQnliMlIxClkzUnBiMjR1YzNaakxtTnNkWE4wWlhJdWJHOWpZV3lDSVc1aGRITXRiR0l1YzNSaFoybHVaeTV6ZG1NdVkyeDEKYzNSbGNpNXNiMk5oYklJaGJtRjBjeTFzWWk1MFpYTjBhVzVuTG5OMll5NWpiSFZ6ZEdWeUxteHZZMkZzZ2h4dQpZWFJ6TFd4aUxuRmhMbk4yWXk1amJIVnpkR1Z5TG14dlkyRnNNQjBHQTFVZERnUVdCQlRpVnVrUklpTjRpZzB4CmNYUmIyaXRXWDR4cUd6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFtUmJUbDJhSVVxNlNsNWVmVXYyV3JnekgKU3M2QTZlWEVBb2VyQ05KdTkzS0Jnc0JoYlhBZ2tmd2VwVGF3OTI2V3NkV0JoT3ZRWkxiVmxCcVkyeHZITWdzeQppTmFzUHI5WFA2UVA1QVEwdGpQWlJYNStzWFA2SURVN0JPMmZZdFNXUTd5K2syV09tL3RIS2gyNWU5TVR0cDB1Ck84a3B6U3VFZnMxQjI0SUYzZDRsNmJWVStvSGVDNDVQNFJieGNtd21BOXFDaGdJblJBQWl4NzBEWGh6Y01vbjAKOHpOenF4MUp3MzZVOC9yRjZzRCtGVXVyZTJtWTRCWWp3dFJUVnJ6aEg0MnBCazdrYWo0UVpnM3lhN1VudENxUwpzdUFPWWF4czhramQzM05Ka0g2dHQ5emhpT3d4VlRNY2I1bi9wTHhValRZKzRvVHJ3WTVHZklOL1JJYy9EUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2Z0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktnd2dnU2tBZ0VBQW9JQkFRQ3BrRDgwaFpXK3hNbWYKVEp3QlRPcnJBMkxkdG43NGUxREtYbkFtSlE3eGNCVk8xUnBDaU1PNWNDSmo4NWFRNm5ZVjVJSkR3S3FVNHFaeAp0cG4zK0d6ZzNRWGFySVVQVGtxbm5BR09DeXZTUktDT0VEYjVyZUk5SjhjS0JOeEh6QTFEUWRncUVKUXAvKzRWCnlSRG41STNTT0xwWnZxSFhZRnU1QWxsM0pNWm1kSU9RMGxDLzI5bHFVZHg0L0dMN0lxNU5uek9vUDI4QUZCN0gKbU9hWjg2RHBaaWk4bGtxU28rUFdjY0I0NEtuQmY2UWVGaitZTHRvbExUaFhjVjQ0TE9xWGFuSG1RK1FOOUtJVgp3R0FJcjN6cTNGZVhzc1JVZkw1VVNXS2JVS0JhVEg2QTE1VWxEY1FlNHV3YVluRnFESDEwdWN6TG9iL1R0Rk4zCkh4azNYZkV6QWdNQkFBRUNnZ0VBQmNkYU9CYURZM1IrY0pUaVRqTUtZSWNGaEF2WHFPMCs5QjZpME5IN2YrUHoKZmZQS1NORXpabXI1YVJHZ3BJQ3hGSTdzbDVXRjJyd2Nzd3huaytsZUFJM1h5THVQYjFXYU9yc1kzSGZwL3VrQwoxY1Njc3dhbmlyRUQyZ1lQWWMwRStMRlNSaUM1Zy9McWNNaWc4RjQ4TFJsczFHa29SOWhMVi9OS0RFTHZGZ2U5ClJLbG9BRVA2eGJDL2c0OFkvZVZ4NkhXSk5hMCt1SUhwaFpmZFFGSGQ2VEdiZEo4aExrUHZIMGtrdHZ1bDBRZzkKNnNpMVE0RUhRcFkrZE90V2J0YVlLbFBRMDNaVlFLZHVYQ0pWK0d3OThsQmdXNFZ0cDhlZk1sdldiU29yeWxpUwpNdVdJU2EvWFo2OW04NjlOaXZxY1FuaXQ0QWV1b1J5NEFqcm9nRFZ5SFFLQmdRREJlU3JGcUEwNkxWMW9kV0t1ClB1M3RVZ1MvY1U4T2I5QnQwT2p4djEvMVNzNzFURUxrZmdFc252ZFM3VCs5b2pGOTBFQ0JHQTY3R3pwS0k5QksKbkpmNnJrTXRQdFlDaTBYTC9tRXN4dUpzbmF3cE1jeHUyUm9HbFk2eUJnQS9Ja3RseEhwN2NLZEZZM2JGOHUxagoyZHZBV2RSRlRWVFJaSmRZK3RtUW9ucWREUUtCZ1FEZ1hPdldVZnBtNGp0dmtPbDVlbXdqREw3RXhGTnJUd2dICmNVamdCNDBOcXlPbUIrWVRWcFhWZ2hCMmxmWERUQ3Z4SGtFRmUzTXdjcGhSMS9WSDJvRU02d3Y0c0FIaXhkUUgKUVV5OEZPZFRoTXhpNTZ3V2F3Vk9lR2d3Y0pGUThPWkZVM1lmbFJoQjdJNzZNQ09YTUFJUHl2VVQ0SGJydE83agpWcUVIbjJHM1B3S0JnUUNneVpMN1d6Tks4eUtheWx0dFZnMGoyckxwYTBCNVRnR1pFakpWbm1jZ0VzQzJhVjk2ClJ5R3d0SmYwaWdrY0R5dzBWQnNYYmlmbjViUG1vNmJhS3hPL0dJM3BqendLTnphVlZ0M3BlWXY1R254V2EvVnEKOWZCRUlvekpkR1ZHRXJrNFpUWXBXakVaWUpUMzQzRFlOOWtDSFdWbEJ1U0RkS2EzSXhvbXNuRldEUUtCZ1FDaQpQby9NekR0bmF2SFFHOXE2SGUxVTYwS0l4L0FMQ1h1azVpYnMyb2tGK1Z3dUZFZ3NjOUNtTlFmeXVUNmZtOVdxCjUxWGR3UWZyWVBNRlBFWURUOTlDbURadi85ZGRSZkd0eldyUUY4MndkN2ZWVGZNRHd5QnpQbDhacUUxdFdzY3EKR3RDd3hnQmtxOHc0MzliYzNicWY4UVNJK3lrRUNqTTE4czgvMCtHMXdRS0JnQnhYMHpYZUFDU0xlNFJlbnZ0aApMQ0MwdUpFaklyM3pIcVhTb2ZBZklNMWFqQWVRVHRLVkUxK2pUaEtxWG5YSDRHdjRMa01PTTRXdFkxK2FpaGFCCkJNVDhpcVl4RGU2MHhScldOQXFHZldqWFZ5b3hQK21kalRHblkrRXh6STdraW01dE5Ed1d2dllGbzNSUnNzRHMKNEVSYlZIUGNXaTgwWCtQd0wrZ1lZTzBjCi0tLS0tRU5EIFBSSVZBVEUgS0VZLS0tLS0K

nats:
  enabled: true

  service:
    enabled: false

  config:
    cluster:
      enabled: true
      replicas: 3

      tls:
        enabled: true
        # set secretName in order to mount an existing secret to dir
        secretName: nats-routes-tls
        dir: /etc/nats-certs/cluster
        cert: tls.crt
        key: tls.key
        ca: ca.crt

    jetstream:
      enabled: true
      fileStore:
        pvc:
          size: 5Gi

    nats:
      tls:
        enabled: true
        # set secretName in order to mount an existing secret to dir
        secretName: nats-vechr-cert
        dir: /etc/nats-certs/nats
        cert: tls.crt
        key: tls.key
        ca: ca.crt

    mqtt:
      enabled: true
      tls:
        enabled: true
        # set secretName in order to mount an existing secret to dir
        secretName: nats-vechr-cert
        dir: /etc/nats-certs/mqtt
        cert: tls.crt
        key: tls.key
        ca: ca.crt

    websocket:
      enabled: true
      port: 9090
      tls:
        enabled: true
        # set secretName in order to mount an existing secret to dir
        secretName: nats-vechr-cert
        dir: /etc/nats-certs/websocket
        cert: tls.crt
        key: tls.key
        ca: ca.crt

        merge:
          verify: false # will skip checking of certificate TLS, if true client need to specify

      merge:
        no_tls: false
        same_origin: false
        allowed_origins: []

  natsbox:
    enabled: true

  podTemplate:
    topologySpreadConstraints:
      kubernetes.io/hostname:
        maxSkew: 1
        whenUnsatisfiable: DoNotSchedule

############################################################# Config for NGINX #############################################################
nginx:
  enabled: true

###################################################### Config for Metrics Server ###########################################################
metricsServer:
  enabled: true

################################################## Config for Postgresql (Bitnami) #########################################################
postgresql:
  enabled: true
  auth:
    postgresPassword: "vechr123"
    username: "vechrUser"
    password: "vechr123"
  
  containerPorts:
    postgresql: 5432

######################################################## Config for CERT MANAGER ###########################################################
certmanager:
  # Will Override TLS Ingresses in above configuration
  ingressTLS:
    enabled: false
    issuer:
      name: letsencrypt-vechr
      email: admin@vechr.com
    name: nginx-vechr-cert-ingress
    hosts: 
      - app.vechr.com

######################################################## Config for GKE ###########################################################
gke:
  enabled: false
  ingress:
    # gke class
    class: gce
    # Your address static ip
    staticIP: vechr-iiot-asia-southeast2-prod-ingress-ip

  nats:
    loadBalancerIP: "34.101.60.90"

##################################################### Config for Service External #########################################################
serviceExternal:
  services:
    - name: gmail-service
      enabled: true
      externalName: smtp.gmail.com
      ports:
        - port: 587
