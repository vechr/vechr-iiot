services:
  api-gateway:
    container_name: api-gateway
    image: nginx:stable
    ports: 
        - "443:443"
    volumes: 
        - './dockerfiles/nginx:/etc/nginx'
        - './certificate/self-signed/ingress:/etc/ssl/certs'
    depends_on:
      - things-service
      - auth-service

  web-app:
    container_name: web-app
    build:
      context: ./dockerfiles/application/web-app
      dockerfile: web-app.dockerfile
    working_dir: /app
    volumes:
      - ./application/web-app:/app
    ports:
      - "8080:8080"
      - "3031:3031"
    depends_on:
      - things-service
      - db-logger-service
      - notification-service
      - auth-service
  
  web-app-prod:
    container_name: web-app-prod
    image: asia-southeast2-docker.pkg.dev/vechr-iiot-389413/vechr-iiot-repository/web-app
    ports:
      - "8080:80"
    env_file:
      - application/web-app/.env

  db-logger-service:
    container_name: db-logger-service
    build:
      context: ./dockerfiles/microservices/db-logger
      dockerfile: db-logger.dockerfile
    working_dir: /app
    volumes:
      - ./microservices/db-logger-service:/app
      - ./certificate:/certificate
    ports:
      - "3001:3000"
      - "9229:9229"
      - "5556:5555"
      - "8081"
    env_file:
      - microservices/db-logger-service/.env
    depends_on:
      - influxdb
      - nats-server
      - mosquitto
      - nats-box

  db-logger-service-prod:
    container_name: db-logger-service-prod
    image: asia-southeast2-docker.pkg.dev/vechr-iiot-389413/vechr-iiot-repository/db-logger-service
    ports:
      - "3001:3000"
      - "8081"
    env_file:
      - microservices/db-logger-service/.env
    depends_on:
      - influxdb
      - nats-server
      - mosquitto
      - nats-box

  auth-service:
    container_name: auth-service
    build:
      context: ./dockerfiles/microservices/auth
      dockerfile: auth.dockerfile
    working_dir: /app
    volumes:
      - ./microservices/auth-service:/app
      - ./certificate:/certificate
    ports:
      - "3002:3000"
      - "9230:9229"
      - "5557:5555"
      - "8081"
    env_file:
      - microservices/auth-service/.env
    depends_on:
      - influxdb
      - nats-server
      - mosquitto
      - nats-box
      - postgres-db
  
  auth-service-prod:
    container_name: auth-service-prod
    image: asia-southeast2-docker.pkg.dev/vechr-iiot-389413/vechr-iiot-repository/auth-service
    ports:
      - "3002:3000"
      - "8081"
    env_file:
      - microservices/auth-service/.env
    depends_on:
      - influxdb
      - nats-server
      - mosquitto
      - nats-box
      - postgres-db

  things-service:
    container_name: things-service
    build:
      context: ./dockerfiles/microservices/things
      dockerfile: things.dockerfile
    working_dir: /app
    volumes:
      - ./microservices/things-service:/app
      - ./certificate:/certificate
    ports:
      - "3003:3000"
      - "9231:9229"
      - "5558:5555"
      - "8081"
    env_file:
      - microservices/things-service/.env
    depends_on:
      - influxdb
      - nats-server
      - mosquitto
      - nats-box
      - postgres-db
  
  things-service-prod:
    container_name: things-service-prod
    image: asia-southeast2-docker.pkg.dev/vechr-iiot-389413/vechr-iiot-repository/things-service
    ports:
      - "3003:3000"
      - "8081"
    env_file:
      - microservices/things-service/.env
    depends_on:
      - influxdb
      - nats-server
      - mosquitto
      - nats-box
      - postgres-db
  
  notification-service:
    container_name: notification-service
    build:
      context: ./dockerfiles/microservices/notification
      dockerfile: notification.dockerfile
    working_dir: /app
    volumes:
      - ./microservices/notification-service:/app
      - ./certificate:/certificate
    ports:
      - "3004:3000"
      - "9232:9229"
      - "5559:5555"
      - "8081"
    env_file:
      - ./microservices/notification-service/.env
    depends_on:
      - influxdb
      - nats-server
      - mosquitto
      - nats-box
      - postgres-db
  
  notification-service-prod:
    container_name: notification-service-prod
    image: asia-southeast2-docker.pkg.dev/vechr-iiot-389413/vechr-iiot-repository/notification-service
    ports:
      - "3004:3000"
      - "8081"
    env_file:
      - ./microservices/notification-service/.env
    depends_on:
      - influxdb
      - nats-server
      - mosquitto
      - nats-box
      - postgres-db

  # Redis for cached    
  redis:
    container_name: redis-vechr
    image: redis:6
    command: redis-server /usr/local/etc/redis/redis.conf
    ports:
      - 6379:6379
    volumes:
      - ./dockerfiles/redis/redis.conf:/usr/local/etc/redis/redis.conf
  
  tempo:
    container_name: tempo-vechr
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./dockerfiles/tempo/config.yaml:/etc/tempo.yaml
      - ./data/tempo-data:/tmp/tempo
    ports:
      - "14268:14268"  # jaeger ingest, Jaeger - Thrift HTTP
      - "14250:14250" # Jaeger - GRPC
      - "3200:3200"   # tempo
      - "9095:9095" # tempo grpc
      - "4317:4317"  # otlp grpc
      - "4318:4318"  # otlp http
      - "9411:9411"   # zipkin

  prometheus:
    container_name: prometheus-vechr
    image: prom/prometheus:latest
    volumes:
      - ./dockerfiles/prometheus/config.yaml:/etc/prometheus.yaml
    entrypoint:
      - /bin/prometheus
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
    ports:
      - "9090:9090"

  loki:
    container_name: loki-vechr
    image: grafana/loki:2.8.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki.yaml
    environment:
      - JAEGER_AGENT_HOST=tempo
      - JAEGER_ENDPOINT=http://tempo:14268/api/traces # send traces to Tempo
      - JAEGER_SAMPLER_TYPE=const
      - JAEGER_SAMPLER_PARAM=1
    volumes:
      - ./dockerfiles/loki/config.yaml:/etc/loki/loki.yaml
      - ./data/loki-data:/tmp/loki

  promtail:
    container_name: promtail-vechr
    image: grafana/promtail:2.8.0
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml

  grafana:
    container_name: grafana-vechr
    image: grafana/grafana:latest
    volumes:
      - ./dockerfiles/grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - tempo
      - loki

  postgres-db:
    container_name: postgres-db
    image: postgres:14.3-alpine
    restart: always
    volumes:
      - ./dockerfiles/database/postgres:/docker-entrypoint-initdb.d
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    environment:
      - POSTGRES_MULTIPLE_DATABASES=${POSTGRES_MULTIPLE_DATABASES}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  pg-admin4:
    container_name: pg-admin4
    image: dpage/pgadmin4
    ports:
      - 5050:80
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}

  influxdb:
    image: influxdb:2.1.0-alpine
    container_name: influxdb
    restart: always
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASS}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG} 
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
    ports:
      - '8086:8086'
    volumes:
      - influxdb_data:/var/lib/influxdb

  nats-server:
    container_name: nats-server
    image: nats:${NATS_VERSION:-alpine}
    command: -c /config/standalone.conf
    volumes:
      - ./certificate:/certificate
      - ./dockerfiles/nats:/config
    ports:
      - 1883:1883
      - 4222:4222
      - 9000:9000

   # Eclipse Mosquitto MQTT Broker
  mosquitto:
    container_name: mosquitto
    build:
      context: ./dockerfiles
      dockerfile: ./mqtt/mqtt.dockerfile
      args:
        - MOSQUITTO_VERSION=${MOSQUITTO_VERSION:-latest}
    environment:
      - MOSQUITTO_USERNAME=${MOSQUITTO_USERNAME}
      - MOSQUITTO_PASSWORD=${MOSQUITTO_PASSWORD}
    restart: always
    volumes:
      - ./scripts:/scripts
    ports:
      - 1884:1883

  #NATS Client
  nats-box:
    container_name: nats-box
    platform: linux/amd64
    image: natsio/nats-box:latest
    stdin_open: true
    tty: true

  mail-dev:
    container_name: mail-dev
    image: maildev/maildev
    ports:
      - ${EMAIL_SMTP_SERVER_PORT}:${EMAIL_SMTP_SERVER_PORT}
      - ${EMAIL_SMTP_WEB}:${EMAIL_SMTP_WEB}
    command: bin/maildev -w ${EMAIL_SMTP_WEB} -s ${EMAIL_SMTP_SERVER_PORT} --outgoing-host ${EMAIL_OUTGOING_HOST} --outgoing-user ${EMAIL_OUTGOING_ID} --outgoing-pass ${EMAIL_OUTGOING_PASS} --outgoing-port ${EMAIL_OUTGOING_PORT}
    
volumes:
  influxdb_data:
  postgres_data:

networks:
  default:
    name: vechr_iiot_network
    driver: bridge